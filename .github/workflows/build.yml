name: Build
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
permissions:
  checks: write
  pull-requests: write
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: postgres:13.5-alpine
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: virtudoc
          POSTGRES_DB: virtudoc
        ports: [ '5432:5432' ]
      email:
        image: rnwood/smtp4dev:3.1.3-ci20211206101
        ports: [ '2525:25' ]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Get m2 cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-
      - name: Setup Java 11 JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-package: jdk
          java-version: 11
      - name: Install Google Chrome
        run: |
          chmod +x ./cicd/installchrome.sh
          ./cicd/installchrome.sh
      - name: Compile Java source
        run: mvn compiler:testCompile -B -Dmaven.test.skip=true -Dspring.profiles.active=test -T4 -q
      - name: Run JUnit tests
        run: mvn test -B -Dspring.profiles.active=test -T1
        env:
          JDBC_DATABASE_URL: jdbc:postgresql://localhost:5432/virtudoc
          JDBC_DATABASE_USERNAME: root
          JDBC_DATABASE_PASSWORD: virtudoc
          SMTP_SERVER: localhost
          SMTP_USERNAME: testuser@dev.local
          STMTP_PASSWORD: testpassword
          SMTP_PORT: 2525
      - name: Check slug size
        run: echo "Raw slug size of $(du -sh ./ | awk -F '\t' '{print $1}')/500MB (without compression)"
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Java test results
          path: ./target/surefire-reports/*.xml
      - name: Build the production image
        run: docker build -f prod.Dockerfile -t virtudoc-web .
  dev-stack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Start dev stack
        run: docker-compose up --detach
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
      - name: Install Ruby dependencies
        working-directory: ./cicd/dev
        run: |
          gem install bundler
          bundle install
      - name: Wait for stack to come online
        uses: juliangruber/sleep-action@v1
        with:
          time: 1m
      - name: Import self-signed certificates
        working-directory: ./proxy/cert
        run: |
          cp virtudoc-https.crt /usr/local/share/ca-certificates/virtudoc-https.crt
          sudo update-ca-certificates
      - name: Run dev stack tests
        working-directory: ./cicd/dev
        run: bundle exec rspec --format RspecJunitFormatter --out rspec.xml spec
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Dev stack test results
          path: ./cicd/dev/rspec.xml
  test-results:
    needs: [build, dev-stack]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: artifacts/**/*.xml
