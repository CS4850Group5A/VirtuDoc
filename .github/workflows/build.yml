name: Build
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: postgres:13.5-alpine
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: virtudoc
          POSTGRES_DB: virtudoc
        ports: [ '5432:5432' ]
      email:
        image: rnwood/smtp4dev:3.1.3-ci20211206101
        ports: [ '2525:25' ]
      minio:
        image: quay.io/minio/minio:RELEASE.2022-01-28T02-28-16Z
        ports: [ '9000:9000' ]
      env:
        MINIO_ROOT_USER: virtudoc
        MINIO_ROOT_PASSWORD: virtudoc
        MINIO_ACCESS_KEY: virtudoc
        MINIO_SECRET_KEY: virtudoc
      options: --entrypoint "server --address 0.0.0.0:9000 /data"
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Get m2 cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-
      - name: Setup Java 11 JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-package: jdk
          java-version: 11
      - name: Install Google Chrome
        run: |
          chmod +x ./cicd/installchrome.sh
          ./cicd/installchrome.sh
      - name: Compile Java source
        run: mvn compiler:testCompile -B -Dmaven.test.skip=true -Dspring.profiles.active=test -T4 -q
      - name: Run JUnit tests
        run: mvn test -B -Dspring.profiles.active=test -T1
        env:
          JDBC_DATABASE_URL: jdbc:postgresql://localhost:5432/virtudoc
          JDBC_DATABASE_USERNAME: root
          JDBC_DATABASE_PASSWORD: virtudoc
          SMTP_SERVER: localhost
          SMTP_USERNAME: testuser@dev.local
          STMTP_PASSWORD: testpassword
          SMTP_PORT: 2525
          AWS_ACCESS_KEY_ID: virtudoc
          AWS_SECRET_ACCESS_KEY: virtudoc
          AWS_BUCKET: virtudoc
          AWS_ENDPOINT: http://minio:9000
      - name: Check slug size
        run: echo "Raw slug size of $(du -sh ./ | awk -F '\t' '{print $1}')/500MB (without compression)"
      - name: Publish unit test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: ./target/surefire-reports/*.xml
          report_individual_runs: "true"
      - name: Build the production image
        run: docker build -f prod.Dockerfile -t virtudoc-web .